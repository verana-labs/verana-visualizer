apiVersion: apps/v1
kind: Deployment
metadata:
  name: verana-visualizer
  labels:
    app: verana-visualizer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: verana-visualizer
  template:
    metadata:
      labels:
        app: verana-visualizer
    spec:
      containers:
      - name: verana-visualizer
        image: verana/verana-visualizer:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_API_ENDPOINT
          value: "https://api.testnet.verana.network"
        - name: NEXT_PUBLIC_RPC_ENDPOINT
          value: "https://rpc.testnet.verana.network"
        - name: NEXT_PUBLIC_IDX_ENDPOINT
          value: "https://idx.testnet.verana.network"
        - name: NEXT_PUBLIC_RESOLVER_ENDPOINT
          value: "https://resolver.testnet.verana.network"
        - name: NEXT_PUBLIC_CHAIN_ID
          value: "vna-testnet-1"
        - name: NEXT_PUBLIC_CHAIN_NAME
          value: "Testnet"
        - name: NEXT_PUBLIC_APP_NAME
          value: "Verana Visualizer"
        - name: NEXT_PUBLIC_APP_LOGO
          value: "logo.svg"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: verana-visualizer-service
  labels:
    app: verana-visualizer
spec:
  selector:
    app: verana-visualizer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer
